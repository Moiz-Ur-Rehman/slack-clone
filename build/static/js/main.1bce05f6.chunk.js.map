{"version":3,"sources":["firebase.js","components/Header.jsx","features/appSlice.js","components/SidebarOption.jsx","components/Sidebar.jsx","components/ChatInput.jsx","components/Message.jsx","components/Chat.jsx","components/Login.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","type","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContent","color","fadeIn","className","AppBody","path","exact","store","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bce05f6.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport firebase from 'firebase';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBXW7oUoMUJvaqaNdJkbWxWmFI8ZK1U65A\",\r\n  authDomain: \"slack-moiz.firebaseapp.com\",\r\n  projectId: \"slack-moiz\",\r\n  storageBucket: \"slack-moiz.appspot.com\",\r\n  messagingSenderId: \"557393098798\",\r\n  appId: \"1:557393098798:web:ef990ed6ce5f921531c7bf\",\r\n  measurementId: \"G-1KZJ388B4X\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst db = app.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, db, provider };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport {useAuthState} from \"react-firebase-hooks/auth\"\r\nimport {auth} from \"../firebase\"\r\nfunction Header() {\r\n  const [user]=useAuthState(auth)\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderLeft>\r\n        <HeaderAvatar\r\n        onClick={()=>auth.signOut()}\r\n          alt={user?.displayName}\r\n          src={user?.photoURL}\r\n        />\r\n        <AccessTimeIcon />\r\n      </HeaderLeft>\r\n\r\n      <HeaderSearch>\r\n        <SearchIcon/>\r\n        <input type=\"text\" placeholder=\"Search\" />\r\n      </HeaderSearch>\r\n\r\n      <HeaderRight>\r\n        <HelpOutlineIcon/>\r\n      </HeaderRight>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\nconst HeaderRight = styled.div`\r\n  flex: 0.3;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  > .MuiSvgIcon-root {\r\n    margin-left: auto;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\nconst HeaderSearch = styled.div`\r\n  flex: 0.4;\r\n  opacity: 1;\r\n  border-radius: 6px;\r\n  text-align: center;\r\n  background-color: #421f44;\r\n  display: flex;\r\n  padding: 0 50px;\r\n  color: gray;\r\n  border: 1px solid gray;\r\n  > input{\r\n    text-align: center;\r\n    border: none;\r\n    background-color: transparent;\r\n    min-width: 30vw;\r\n    outline: 0;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px 0;\r\n  background-color: var(--slack-color);\r\n  color: white;\r\n`;\r\nconst HeaderLeft = styled.div`\r\n  flex: 0.3;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 20px;\r\n  > .MuiSvgIcon-root {\r\n    margin-left: auto;\r\n    margin-right: 30px;\r\n  }\r\n`;\r\nconst HeaderAvatar = styled(Avatar)`\r\n  cursor: pointer;\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const appSlice = createSlice({\n  name: \"app\",\n  initialState: {\n    roomId: null,\n  },\n  reducers: {\n    enterRoom: (state, action) => {\n      state.roomId = action.payload.roomId;\n    },\n  },\n});\nexport const { enterRoom } = appSlice.actions;\nexport const selectRoomId = (state) => state.app.roomId;\nexport default appSlice.reducer;\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { enterRoom } from \"../features/appSlice\";\r\nimport { db } from \"../firebase\";\r\n\r\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\r\n  const dispatch = useDispatch();\r\n  const addChannel = () => {\r\n    const channelName = prompt(\"Please Enter the Channel Name: \");\r\n    if (channelName) {\r\n      db.collection(\"rooms\").add({\r\n        name: channelName,\r\n      });\r\n    }\r\n  };\r\n  const selectChannel = () => {\r\n    if (id) {\r\n      dispatch(\r\n        enterRoom({\r\n          roomId: id\r\n        })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <SidebarOptionContainer\r\n      onClick={addChannelOption ? addChannel : selectChannel}\r\n    >\r\n      {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\r\n      {Icon ? (\r\n        <h3>{title}</h3>\r\n      ) : (\r\n        <SidebarOptionChannel>\r\n          <span>#</span> {title}\r\n        </SidebarOptionChannel>\r\n      )}\r\n    </SidebarOptionContainer>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n\r\nconst SidebarOptionContainer = styled.div`\r\n  display: flex;\r\n  font-size: 12px;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  cursor: pointer;\r\n  :hover {\r\n    opacity: 0.9;\r\n    background-color: #340e36;\r\n  }\r\n  > h3 {\r\n    font-weight: 500;\r\n  }\r\n  > h3 > span {\r\n    padding: 15px;\r\n  }\r\n`;\r\nconst SidebarOptionChannel = styled.h3`\r\n  padding: 10px 0;\r\n  font-weight: 300;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport InsertCommentIcon from \"@mui/icons-material/InsertComment\";\r\nimport InboxIcon from \"@mui/icons-material/Inbox\";\r\nimport DraftsIcon from \"@mui/icons-material/Drafts\";\r\nimport BookmarkBorderIcon from \"@mui/icons-material/BookmarkBorder\";\r\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\";\r\nimport AppsIcon from \"@mui/icons-material/Apps\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\"\r\nimport {auth} from \"../firebase\"\r\n\r\nfunction Sidebar() {\r\n  const [channels] = useCollection(db.collection(\"rooms\"));\r\n  const [user]=useAuthState(auth);\r\n  return (\r\n    <SidebarContainer>\r\n      <SidebarHeader>\r\n        <SidebarInfo>\r\n          <h2>Tech Flickers</h2>\r\n          <h3>\r\n            <FiberManualRecordIcon />\r\n            {user.displayName}\r\n          </h3>\r\n        </SidebarInfo>\r\n        <CreateIcon />\r\n      </SidebarHeader>\r\n\r\n      <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\r\n      <SidebarOption Icon={InboxIcon} title=\"Mentions & reactions\" />\r\n      <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\r\n      <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\r\n      <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\" />\r\n      <SidebarOption Icon={AppsIcon} title=\"Apps\" />\r\n      <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\r\n      <SidebarOption Icon={ExpandLessIcon} title=\"Show less\" />\r\n      <hr />\r\n      <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\r\n      <hr />\r\n      <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channels\" />\r\n      {channels?.docs.map((doc) => (\r\n        <SidebarOption key={doc.id} id={doc.id} title={doc.data().name} />\r\n      ))}\r\n    </SidebarContainer>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n\r\nconst SidebarContainer = styled.div`\r\n  background-color: var(--slack-color);\r\n  color: white;\r\n  flex: 0.3;\r\n  border-top: 1px solid #49274b;\r\n  max-width: 260px;\r\n  margin-top: 60px;\r\n  > hr {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #49274b;\r\n  }\r\n`;\r\nconst SidebarHeader = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid #49274b;\r\n  padding: 13px;\r\n  > .MuiSvgIcon-root {\r\n    padding: 8px;\r\n    color: #49274b;\r\n    font-size: 18px;\r\n    background-color: white;\r\n    border-radius: 999px;\r\n  }\r\n`;\r\nconst SidebarInfo = styled.div`\r\n  flex: 1;\r\n\r\n  > h2 {\r\n    font-size: 15px;\r\n    font-weight: 900;\r\n    margin-bottom: 5px;\r\n  }\r\n  > h3 {\r\n    display: flex;\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    align-items: center;\r\n  }\r\n  > h3 > .MuiSvgIcon-root {\r\n    color: green;\r\n    font-size: 14px;\r\n    margin-top: 1px;\r\n    margin-right: 2px;\r\n  }\r\n`;\r\n","import { Button } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\"\r\nimport {auth} from \"../firebase\"\r\n\r\nfunction ChatInput({ channelName, channelId, chatRef }) {\r\n  const [input, setInput] = useState(\"\");\r\n  const [user]=useAuthState(auth)\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!channelId) {\r\n      return false;\r\n    }\r\n    db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\r\n      message: input,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      user: user.displayName,\r\n      userImage: user.photoURL,\r\n    });\r\n    chatRef?.current?.scrollIntoView({\r\n      behavior:\"smooth\"\r\n    })\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <ChatInputContainer>\r\n      <form>\r\n        <input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder={`Message #${channelName}`}\r\n        />\r\n        <Button hidden type=\"submit\" onClick={sendMessage}>\r\n          Send\r\n        </Button>\r\n      </form>\r\n    </ChatInputContainer>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\nconst ChatInputContainer = styled.div`\r\n  border-radius: 20px;\r\n  > form {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  > form > input {\r\n    position: fixed;\r\n    bottom: 30px;\r\n    width: 60%;\r\n    border: 1px solid gray;\r\n    border-radius: 3px;\r\n    padding: 20px;\r\n    outline: none;\r\n  }\r\n  > form > button {\r\n    display: none !important;\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction Message({message,timestamp,user,userImage}) {\r\n    return (\r\n        <MessageContainer>\r\n            <img src={userImage} alt=\"userImage\" />\r\n            <MessageInfo>\r\n                <h4>\r\n                    {user}\r\n                    <span>\r\n                        {new Date(timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                </h4>\r\n                <p>{message}</p>\r\n            </MessageInfo>\r\n        </MessageContainer>\r\n    )\r\n}\r\n\r\nexport default Message\r\nconst MessageContainer=styled.div`\r\n    display:flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    >img{\r\n        height: 50px;\r\n        border-radius: 8px;\r\n    }\r\n`;\r\nconst MessageInfo=styled.div`\r\n    padding-left: 10px;\r\n    >h4>span{\r\n        color: gray;\r\n        font-weight: 300;\r\n        margin-left: 4px;\r\n        font-size: 10px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\r\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectRoomId } from \"../features/appSlice\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport Message from \"./Message\";\r\n\r\nfunction Chat() {\r\n  const chatRef = useRef(null);\r\n  const roomId = useSelector(selectRoomId);\r\n  const [roomDetails] = useDocument(\r\n    roomId && db.collection(\"rooms\").doc(roomId)\r\n  );\r\n  const [roomMessages, loading] = useCollection(\r\n    roomId &&\r\n      db\r\n        .collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n  );\r\n  useEffect(() => {\r\n    chatRef?.current?.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [roomId, loading]);\r\n  return (\r\n    <ChatContainer>\r\n      {roomDetails && roomMessages && (\r\n        <>\r\n          <Header>\r\n            <HeaderLeft>\r\n              <h4>\r\n                <strong>#{roomDetails?.data().name}</strong>\r\n              </h4>\r\n              <StarBorderIcon />\r\n            </HeaderLeft>\r\n            <HeaderRight>\r\n              <p>\r\n                <InfoOutlinedIcon />\r\n                Details\r\n              </p>\r\n            </HeaderRight>\r\n          </Header>\r\n          <ChatMessages>\r\n            {roomMessages?.docs.map((doc) => {\r\n              const { message, timestamp, user, userImage } = doc.data();\r\n              return (\r\n                <Message\r\n                  key={doc.id}\r\n                  message={message}\r\n                  timestamp={timestamp}\r\n                  user={user}\r\n                  userImage={userImage}\r\n                />\r\n              );\r\n            })}\r\n            <ChatBottom ref={chatRef} />\r\n          </ChatMessages>\r\n          <ChatInput\r\n            chatRef={chatRef}\r\n            channelId={roomId}\r\n            channelName={roomDetails?.data().name}\r\n          />\r\n        </>\r\n      )}\r\n    </ChatContainer>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst ChatBottom = styled.div`\r\n  padding-bottom: 200px;\r\n`;\r\nconst ChatMessages = styled.div``;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  border-bottom: 1px solid lightgray;\r\n`;\r\nconst HeaderLeft = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  > h4 {\r\n    display: flex;\r\n    text-transform: lowercase;\r\n    margin-right: 10px;\r\n  }\r\n  > h4 > .MuiSvgIcon-root {\r\n    margin-left: 10px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\nconst HeaderRight = styled.div`\r\n  > p {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n  }\r\n  > p > .MuiSvgIcon-root {\r\n    margin-right: 5px !important;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst ChatContainer = styled.div`\r\n  flex: 0.7;\r\n  flex-grow: 1;\r\n  overflow-y: scroll;\r\n  margin-top: 60px;\r\n`;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { auth, provider } from \"../firebase\";\r\n\r\nfunction Login() {\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n    auth.signInWithPopup(provider).catch((error) => alert(error.message));\r\n  };\r\n  return (\r\n    <LoginContainer>\r\n      <LoginInnerContainer>\r\n        <img\r\n          src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\"\r\n          alt=\"slack\"\r\n        />\r\n        <h1>Sign in to Tech Flickers</h1>\r\n        <p>TechFlickers.slack.com</p>\r\n        <Button onClick={signIn}>Sign in with Google</Button>\r\n      </LoginInnerContainer>\r\n    </LoginContainer>\r\n  );\r\n}\r\n\r\nexport default Login;\r\nconst LoginContainer = styled.div`\r\n  background-color: #f8f8f8;\r\n  height: 100vh;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\nconst LoginInnerContainer = styled.div`\r\n  padding: 100px;\r\n  text-align: center;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  > img {\r\n    object-fit: contain;\r\n    height: 100px;\r\n    margin-bottom: 40px;\r\n  }\r\n  > button {\r\n    margin-top: 50px;\r\n    text-transform: inherit !important;\r\n    background-color: #0a8d48 !important;\r\n    color: white;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport Chat from \"./components/Chat\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\nimport Login from \"./components/Login\";\nimport Spinner from 'react-spinkit'\n\nfunction App() {\n  const [user, loading] = useAuthState(auth);\n  if(loading){\n    return (\n      <AppLoading>\n        <AppLoadingContent>\n          <img src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\" alt=\"slack\"/>\n          <Spinner\n            name=\"ball-spin-fade-loader\"\n            color=\"purple\"\n            fadeIn=\"none\"\n          />\n        </AppLoadingContent>\n      </AppLoading>\n    )\n  }\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n            <Header />\n            <AppBody>\n              <Sidebar />\n              <Switch>\n                <Route path=\"/\" exact>\n                  <Chat />\n                </Route>\n              </Switch>\n            </AppBody>\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst AppLoading = styled.div`\n  display: grid;\n  place-items: center;\n  height: 100vh;\n  width: 100%;\n`;\nconst AppLoadingContent = styled.div`\n  text-align: center;\n  padding-bottom: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  >img{\n    height: 100px;\n    padding: 20px;\n    margin-bottom: 40px;\n\n  }\n`;\nconst AppBody = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from '../features/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}